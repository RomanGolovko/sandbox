using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ExplosionDanger.BLL
{
    public class OverpressureCalculationCombDust
    {
        double P0 = 101.3;                  // начальное давление, кПа (допускается принимать таким, что равняется 101,3 кПа);
        double Cр = 1.01 * Math.Pow(10, 3); // теплоемкость воздуха, Дж * кг^-1 * К^-1,(допускается принимать равной 1,01 * 10^3);
        double Kн = 3;                      // коэффициент, который учитывает негерметичность помещения 
                                            // и неадиабатичность процесса горения.Допускается принимать Кн равным 3;
        public double Hт { get; set; }      // теплота сгорания, Дж * кг^-1;
        public double F { get; set; }       // массовая доля частичек пыли размером меньше критического. С превышением критического 
                                            // размера частичек пыли аэрозоль становится взрывобезопасным, а именно таким,
                                            // что неспособен распространять пламя. В случае отсутствия возможности получения данных
                                            // относительно массовой доли частиц пыли размером частичек меньше критического
                                            // (допускается принимать F = 1).
        public double Vсвоб { get; set; }   // свободный объем помещения, м^3;
        public double Pв { get; set; }      // плотность воздуха до взрыва при начальной температуре То, кг * м^-3;
        public double T0  { get; set; }     // начальная температура воздуха, К;
        public double Kвз { get; set; }     // часть пыли, которая отложилась в помещении, способная перейти в состояние 
                                            // аэрозоля в результате аварийной ситуации.В случае отсутствия экспериментальных 
                                            // данных относительно значения Квз допускается принимать Квз = 0,9;
        public double mап { get; set; }     // масса горючей пыли, которая поступает в помещение из аппарата, кг 
                                            // (принимают в соответствии с п. 7.1. 1 и п. 7.1. 3);
        public double q { get; set; }       // расход, с которым продолжают поступать пылевидные вещества в аварийный аппарат
                                            // по трубопроводам до момента их перекрытия, кг•с^-1; 
        public double τ { get; set; }       // время перекрывания, которое определяется по п. 7.1. 2 в, с;
        public double Kп { get; set; }      // коэффициент пыления, который представляет собой отношение массы пыли в состоянии 
                                            // аэрозоля ко всей массе пыли, поступившей из аппарата в помещение.В случае отсутствия 
                                            // экспериментальных данных относительно значения Кп допускается принимать:
                                            // для пыли с дисперсностью не меньше чем 350 мкм Кп = 0,5;
                                            // для пыли с дисперсностью меньше чем 350 мкм Кп = 1,0;
        public double Kг { get; set; }      // доля горючей пыли в общей массе собравшейся пыли;
        public double Kубор { get; set; }   // коэффициент эффективности уборки пыли;
        public double n { get; set; }       // количество едениц оборудования, которое пылит;
        public double α{ get; set; }        // доля пыли, которая попадает в объем помещения и которая удаляется вытяжными вентиляционными 
                                            // системами. В случае отсутствия экспериментальных данных принимают α = 0;
        public double β1 { get; set; }      // доля выделяющейся в объем помещения пыли, оседающей на 
                                            // труднодоступных для уборки поверхностях помещения(β1 + β2 = 1).
        public double β2 { get; set; }      // доля выделяющейся в объем помещения пыли, оседающей на 
                                            // доступных для уборки поверхностях помещения(β1 + β2 = 1);
        public double M1j { get; set; }     // масса пыли, которая попадает в объем помещения за период времени между
                                            // генеральными уборками пыли, кг;
        public double M2j { get; set; }     // масса пыли, которая выделяется единицей оборудования, которое пылит, за период
                                            // времени между текущими уборками, кг;
        public double ΔP()
        {
            return ((m() * Hт * P0 * Z()) / (Vсвоб * Pв * Cр * T0)) * (1 / Kн);
        }
        double Z()
        {
            return 0.5 * F;
        }
        double m()
        {
            return mвз() + mав();
        }
        double mвз()
        {
            return Kвз * mп();
        }
        double mав()
        {
            return (mап + q * τ) * Kп;
        }
        double mп()
        {
            return Kг * (1 - Kубор) * (m1() + m2());
        }
        double  m1()
        {
            return M1() * (1 - α) * β1;
        }
        double  M1()
        {
            double temp = 0;
            for (int i = 0; i < n; i++)         // TODO: Здесь костыль, всегда одинаковые значения
                temp += M1j;
            return temp;
        }
        double m2()
        {
            return M2() * (1 - α) * β2;
        }

        double M2()
        {
            double temp = 0;
            for (int i = 0; i < n; i++)         // TODO: Здесь костыль, всегда одинаковые значения
                temp += M2j;
            return temp;
        }
    }
}
